{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(res => res.json()).then(bots => setBots(bots));\n  }, []);\n\n  function enlistBotToArmy(armyBot) {\n    if (!botArmy.find(bot => bot === armyBot)) {\n      const listedBot = bots.find(bot => bot === armyBot);\n      setBotArmy([...botArmy, listedBot]);\n    }\n  }\n\n  function removeBotFromArmy(armyBot) {\n    const botArmyArray = botArmy.filter(bot => bot !== armyBot);\n    setBotArmy(botArmyArray);\n  }\n\n  function deleteBot(armyBot) {\n    if (botArmy.find(bot => bot === armyBot)) {\n      const filterBots = bots.filter(bot => bot !== armyBot);\n      constFilterBotArmy = botArmy.filter(bot => bot !== armyBot);\n      setBots(filterBots);\n      setBotArmy(filterBotArmy);\n      fetch('http://localhost:8002/bots/${armyBot.id}', {\n        method: \"DELETE\"\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botArmy: botArmy,\n      removeBot: removeBotFromArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"names":["React","useEffect","useState","YourBotArmy","BotCollection","BotsPage","bots","setBots","botArmy","setBotArmy","fetch","then","res","json","enlistBotToArmy","armyBot","find","bot","listedBot","removeBotFromArmy","botArmyArray","filter","deleteBot","filterBots","constFilterBotArmy","filterBotArmy","method"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAECF,IAFD,CAEOL,IAAI,IAAIC,OAAO,CAACD,IAAD,CAFtB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASQ,eAAT,CAAyBC,OAAzB,EAAiC;AAC/B,QAAI,CAACP,OAAO,CAACQ,IAAR,CAAaC,GAAG,IAAIA,GAAG,KAAKF,OAA5B,CAAL,EAA0C;AACxC,YAAMG,SAAS,GAAGZ,IAAI,CAACU,IAAL,CAAUC,GAAG,IAAIA,GAAG,KAAKF,OAAzB,CAAlB;AACAN,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaU,SAAb,CAAD,CAAV;AACD;AACF;;AAED,WAASC,iBAAT,CAA2BJ,OAA3B,EAAmC;AACjC,UAAMK,YAAY,GAAGZ,OAAO,CAACa,MAAR,CAAgBJ,GAAD,IAASA,GAAG,KAAKF,OAAhC,CAArB;AACAN,IAAAA,UAAU,CAACW,YAAD,CAAV;AACD;;AAED,WAASE,SAAT,CAAmBP,OAAnB,EAA2B;AACzB,QAAIP,OAAO,CAACQ,IAAR,CAAcC,GAAD,IAASA,GAAG,KAAKF,OAA9B,CAAJ,EAA2C;AACzC,YAAMQ,UAAU,GAAGjB,IAAI,CAACe,MAAL,CAAYJ,GAAG,IAAIA,GAAG,KAAKF,OAA3B,CAAnB;AACAS,MAAAA,kBAAkB,GAAGhB,OAAO,CAACa,MAAR,CAAeJ,GAAG,IAAIA,GAAG,KAAKF,OAA9B,CAArB;AACAR,MAAAA,OAAO,CAACgB,UAAD,CAAP;AACAd,MAAAA,UAAU,CAACgB,aAAD,CAAV;AAEJf,MAAAA,KAAK,CAAE,0CAAF,EAA8C;AACjDgB,QAAAA,MAAM,EAAE;AADyC,OAA9C,CAAL;AAGD;AACA;;AAEC,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAElB,OAAtB;AAA+B,MAAA,SAAS,EAAEW;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1CQd,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  \n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  \n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n    .then (res => res.json())\n    .then (bots => setBots(bots))\n  }, []);\n\n  function enlistBotToArmy(armyBot){\n    if (!botArmy.find(bot => bot === armyBot)){\n      const listedBot = bots.find(bot => bot === armyBot)\n      setBotArmy([...botArmy, listedBot])\n    }\n  }\n\n  function removeBotFromArmy(armyBot){\n    const botArmyArray = botArmy.filter((bot) => bot !== armyBot)\n    setBotArmy(botArmyArray)\n  }\n\n  function deleteBot(armyBot){\n    if (botArmy.find((bot) => bot === armyBot)){\n      const filterBots = bots.filter(bot => bot !== armyBot)\n      constFilterBotArmy = botArmy.filter(bot => bot !== armyBot)\n      setBots(filterBots)\n      setBotArmy(filterBotArmy)\n\n  fetch ('http://localhost:8002/bots/${armyBot.id}', {\n    method: \"DELETE\"\n  })\n}\n}\n\n  return (\n    <div>\n      <YourBotArmy botArmy={botArmy} removeBot={removeBotFromArmy}/>\n      <BotCollection />\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}